{"version":3,"sources":["serviceWorker.js","components/Header/style.js","components/Header/Header.js","components/Main/style.js","components/Main/Main.js","components/AboutMe/AboutMe.js","Routes.js","globalStyle.js","App.js","index.js"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","Container","styled","div","_templateObject","Header","react_default","a","createElement","style","Link","to","style_templateObject","Main","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","buyingPrice","sellingPrice","profit","handleChange","bind","assertThisInitialized","calculateProfit","event","_this$state","preventDefault","setState","defineProperty","target","name","value","_this$state2","Main_style","onSubmit","htmlFor","type","id","autoComplete","step","onChange","Component","AboutMe","Routes","Switch","Route","exact","path","component","GlobalStyle","createGlobalStyle","globalStyle_templateObject","App","Fragment","globalStyle","components_Header_Header","src_Routes","ReactDOM","render","HashRouter","src_App","document","getElementById","URL","process","href","origin","addEventListener","concat","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c85f4741.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n        // [::1] is the IPv6 localhost address.\n        window.location.hostname === '[::1]' ||\n        // 127.0.0.1/8 is considered localhost for IPv4.\n        window.location.hostname.match(\n            /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n        )\n);\n\nexport function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n        // The URL constructor is available in all browsers that support SW.\n        const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n        if (publicUrl.origin !== window.location.origin) {\n            // Our service worker won't work if PUBLIC_URL is on a different origin\n            // from what our page is served on. This might happen if a CDN is used to\n            // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n            return;\n        }\n\n        window.addEventListener('load', () => {\n            const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n            if (isLocalhost) {\n                // This is running on localhost. Let's check if a service worker still exists or not.\n                checkValidServiceWorker(swUrl, config);\n\n                // Add some additional logging to localhost, pointing developers to the\n                // service worker/PWA documentation.\n                navigator.serviceWorker.ready.then(() => {\n                    console.log(\n                        'This web app is being served cache-first by a service ' +\n                            'worker. To learn more, visit http://bit.ly/CRA-PWA'\n                    );\n                });\n            } else {\n                // Is not localhost. Just register service worker\n                registerValidSW(swUrl, config);\n            }\n        });\n    }\n}\n\nfunction registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n        .register(swUrl)\n        .then(registration => {\n            registration.onupdatefound = () => {\n                const installingWorker = registration.installing;\n                if (installingWorker == null) {\n                    return;\n                }\n                installingWorker.onstatechange = () => {\n                    if (installingWorker.state === 'installed') {\n                        if (navigator.serviceWorker.controller) {\n                            // At this point, the updated precached content has been fetched,\n                            // but the previous service worker will still serve the older\n                            // content until all client tabs are closed.\n                            console.log(\n                                'New content is available and will be used when all ' +\n                                    'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n                            );\n\n                            // Execute callback\n                            if (config && config.onUpdate) {\n                                config.onUpdate(registration);\n                            }\n                        } else {\n                            // At this point, everything has been precached.\n                            // It's the perfect time to display a\n                            // \"Content is cached for offline use.\" message.\n                            console.log('Content is cached for offline use.');\n\n                            // Execute callback\n                            if (config && config.onSuccess) {\n                                config.onSuccess(registration);\n                            }\n                        }\n                    }\n                };\n            };\n        })\n        .catch(error => {\n            console.error('Error during service worker registration:', error);\n        });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n        .then(response => {\n            // Ensure service worker exists, and that we really are getting a JS file.\n            const contentType = response.headers.get('content-type');\n            if (\n                response.status === 404 ||\n                (contentType != null &&\n                    contentType.indexOf('javascript') === -1)\n            ) {\n                // No service worker found. Probably a different app. Reload the page.\n                navigator.serviceWorker.ready.then(registration => {\n                    registration.unregister().then(() => {\n                        window.location.reload();\n                    });\n                });\n            } else {\n                // Service worker found. Proceed as normal.\n                registerValidSW(swUrl, config);\n            }\n        })\n        .catch(() => {\n            console.log(\n                'No internet connection found. App is running in offline mode.'\n            );\n        });\n}\n\nexport function unregister() {\n    if ('serviceWorker' in navigator) {\n        navigator.serviceWorker.ready.then(registration => {\n            registration.unregister();\n        });\n    }\n}\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n    height: 56px;\n    width: 100%;\n    z-index: 1;\n    background-color: #311b92;\n    color: #000000;\n    box-shadow: 0 12px 17px 2px rgba(0, 0, 0, 0.14),\n        0 5px 22px 4px rgba(0, 0, 0, 0.12), 0 7px 8px -4px rgba(0, 0, 0, 0.2);\n    padding: 12px;\n    font-size: 24px;\n    display: flex;\n    align-items: center;\n    position: fixed;\n\n    h5 {\n        letter-spacing: 0;\n        font-size: 24px;\n        font-weight: 400;\n        margin-left: 24px;\n    }\n\n    a {\n        text-decoration: none;\n        color: #ffffff;\n    }\n\n    a:hover {\n        text-decoration: none;\n        cursor: pointer;\n        color: #ffeb3b;\n    }\n`;\n\nexport default Container;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Container from './style';\n\nconst Header = () => (\n    <Container>\n        <Link to=\"/\">\n            <h5>Fifa Market Tool</h5>\n        </Link>\n    </Container>\n);\n\nexport default Header;\n","import styled from 'styled-components';\n\nconst Container = styled.div`\n    background-color: #ffffff;\n    color: #000000;\n    padding: 56px 24px 24px 24px;\n    margin-top: 56px;\n    font-size: 16px;\n\n    input {\n        border: 0.1rem solid #9e9e9e;\n        border-radius: 4px;\n        outline: none;\n        padding: 0 12px;\n        height: 48px;\n        width: 100%;\n        color: #212121;\n        margin: 12px 0 60px 0;\n    }\n\n    label {\n        font-size: 20px;\n    }\n\n    button {\n        padding: 16px 32px;\n        border: none;\n        background-color: #ffeb3b;\n        font-size: 16px;\n        font-weight: 600;\n    }\n\n    div {\n        display: flex;\n        flex-direction: row;\n        justify-content: space-between;\n    }\n\n    p {\n        font-weight: 600;\n        font-size: 20px;\n    }\n`;\n\nexport default Container;\n","import React, { Component } from 'react';\nimport Container from './style';\n\nclass Main extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = { buyingPrice: '', sellingPrice: '', profit: 0 };\n\n        this.handleChange = this.handleChange.bind(this);\n        this.calculateProfit = this.calculateProfit.bind(this);\n    }\n\n    calculateProfit(event) {\n        const { buyingPrice, sellingPrice } = this.state;\n\n        event.preventDefault();\n\n        const profit = sellingPrice * 0.95 - buyingPrice;\n\n        this.setState({\n            profit\n        });\n    }\n\n    handleChange(event) {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    render() {\n        const { buyingPrice, sellingPrice, profit } = this.state;\n\n        return (\n            <Container>\n                <form onSubmit={this.calculateProfit}>\n                    <label htmlFor=\"name\">Insert your buying price:</label>\n                    <input\n                        type=\"number\"\n                        id=\"name\"\n                        name=\"buyingPrice\"\n                        autoComplete=\"off\"\n                        step=\"100\"\n                        value={buyingPrice}\n                        onChange={this.handleChange}\n                    />\n                    <label htmlFor=\"name\">Insert your selling price:</label>\n                    <input\n                        type=\"number\"\n                        id=\"name\"\n                        name=\"sellingPrice\"\n                        autoComplete=\"off\"\n                        step=\"100\"\n                        value={sellingPrice}\n                        onChange={this.handleChange}\n                    />\n                    <div>\n                        <button type=\"submit\">Calculate</button>\n                        <p>Your profit is: {profit}</p>\n                    </div>\n                </form>\n            </Container>\n        );\n    }\n}\n\nexport default Main;\n","import React from 'react';\n\nconst AboutMe = () => <div>This page will be about me</div>;\n\nexport default AboutMe;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Main from './components/Main';\nimport AboutMe from './components/AboutMe';\n\nconst Routes = () => (\n    <Switch>\n        <Route exact path=\"/\" component={Main} />\n        <Route exact path=\"/about-me\" component={AboutMe} />\n    </Switch>\n);\n\nexport default Routes;\n","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n    html * {\n        font-family: BlinkMacSystemFont, -apple-system, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif !important;\n        box-sizing: border-box;\n        padding: 0;\n        margin: 0;\n    }\n\n    body,\n    html,\n    #root {\n        height: 100%;\n        width: 100%;\n    }\n\n    body {\n        display: flex;\n        flex-direction: column;\n    }\n`;\n\nexport default GlobalStyle;\n","import React from 'react';\nimport Header from './components/Header';\nimport Routes from './Routes';\nimport GlobalStyle from './globalStyle';\n\nconst App = () => (\n    <>\n        <GlobalStyle />\n        <Header />\n        <Routes />\n    </>\n);\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\nimport * as serviceWorker from './serviceWorker';\nimport App from './App';\n\nReactDOM.render(\n    <HashRouter>\n        <App />\n    </HashRouter>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}